services:
  # ====================================================================
  # CrowdSec - Enhanced Security IPS/IDS Configuration
  # Official Documentation: https://docs.crowdsec.net/
  # ====================================================================
  crowdsec:
    image: crowdsecurity/crowdsec:v1.7.0
    container_name: crowdsec

    # ====================================================================
    # SECURITY CONFIGURATION
    # ====================================================================
    security_opt:
      - no-new-privileges=true
      - apparmor=unconfined # Or custom AppArmor profile
      - seccomp=unconfined # Required for certain security operations

    # Run as root to access system log files (/var/log/auth.log, syslog, ufw.log, etc.)
    # CrowdSec requires root permissions to read security-critical logs
    user: "0:0"

    # Restart policy for production
    restart: unless-stopped

    # ====================================================================
    # RESOURCE LIMITS
    # ====================================================================
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 128M

    # ====================================================================
    # DEPENDENCIES
    # ====================================================================
    depends_on:
      postgres:
        condition: service_healthy
      socket-proxy:
        condition: service_healthy
      redis:
        condition: service_healthy # For decision caching

    # ====================================================================
    # HEALTH CHECK
    # ====================================================================
    healthcheck:
      test: ["CMD", "sh", "-c", "cscli version && cscli machines list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # ====================================================================
    # NETWORK CONFIGURATION
    # ====================================================================
    networks:
      - traefik_proxy
      - socket_proxy
      - database
      - cache
      - monitoring

    # Port exposure for API
    ports:
      # API port for bouncers and dashboard
      - "127.0.0.1:${CROWDSEC_API_PORT:-8888}:8080"
      # Prometheus metrics
      - "127.0.0.1:${CROWDSEC_METRICS_PORT:-6060}:6060"

    # ====================================================================
    # SECRETS
    # ====================================================================
    secrets:
      - postgres_password
      - crowdsec_lapi_key
      - crowdsec_bouncer_key

    # ====================================================================
    # CONFIGS
    # ====================================================================
    configs:
      - source: crowdsec_config
        target: /etc/crowdsec/config.yaml.local
      - source: crowdsec_acquis
        target: /etc/crowdsec/acquis.d/docker-logs.yaml

    # ====================================================================
    # VOLUME MOUNTS
    # ====================================================================
    volumes:
      # System logs (read-only for security)
      - /var/log:/host/var/log:ro
      - /var/log/journal:/host/var/log/journal:ro

      # Configuration persistence
      - ${CONFIGDIR}/crowdsec/config:/etc/crowdsec:rw

      # Data persistence (when using SQLite)
      - ${DATADIR}/crowdsec/data:/var/lib/crowdsec/data:rw

      # Acquisition configuration
      - ${CONFIGDIR}/crowdsec/acquis.d:/etc/crowdsec/acquis.d:ro

      # Hub cache
      - ${DATADIR}/crowdsec/hub:/etc/crowdsec/hub:rw

      # Timezone
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

    # ====================================================================
    # ENVIRONMENT CONFIGURATION
    # ====================================================================
    environment:
      # Basic Configuration
      TZ: ${TZ}
      GID: "0" # Run as root to access system logs
      CUSTOM_HOSTNAME: ${HOSTNAME}

      # Docker Socket Proxy
      DOCKER_HOST: tcp://socket-proxy:2375

      # Database Configuration (PostgreSQL with SSL)
      DATABASE_TYPE: postgresql
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_CROWDSEC_DB:-crowdsec_db}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_SSLMODE: require

      # Redis Cache Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 1

      # API Configuration
      DISABLE_AGENT: false
      DISABLE_LOCAL_API: false
      LOCAL_API_URL: http://localhost:8080
      API_ALLOWED_IPS: "127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

      # TLS Configuration
      USE_TLS: ${CROWDSEC_USE_TLS:-false}
      TLS_CERT_FILE: /etc/crowdsec/ssl/cert.pem
      TLS_KEY_FILE: /etc/crowdsec/ssl/key.pem
      TLS_CA_FILE: /etc/crowdsec/ssl/ca.pem
      AGENTS_ALLOWED_OU: ${CROWDSEC_AGENTS_OU:-agent_ou}
      BOUNCERS_ALLOWED_OU: ${CROWDSEC_BOUNCERS_OU:-bouncer_ou}

      # Bouncer Registration (Auto-registration)
      BOUNCER_KEY_TRAEFIK_FILE: /run/secrets/crowdsec_bouncer_key
      BOUNCER_KEY_FIREWALL_FILE: /run/secrets/crowdsec_bouncer_key

      # Agent Configuration
      AGENT_USERNAME: ${CROWDSEC_AGENT_USERNAME:-crowdsec_agent}
      AGENT_PASSWORD: ${CROWDSEC_AGENT_PASSWORD}

      # Collections to Install
      COLLECTIONS: |
        crowdsecurity/linux
        crowdsecurity/traefik
        crowdsecurity/http-cve
        crowdsecurity/whitelist-good-actors
        crowdsecurity/iptables
        crowdsecurity/nginx
        crowdsecurity/apache2
        crowdsecurity/sshd
        crowdsecurity/wordpress
        crowdsecurity/pgsql

      # Scenarios Configuration
      SCENARIOS: |
        crowdsecurity/ssh-bf
        crowdsecurity/ssh-slow-bf
        crowdsecurity/http-sqli-probing
        crowdsecurity/http-xss-probing
        crowdsecurity/http-path-traversal-probing
        ltsich/http-w00tw00t

      # Parsers Configuration
      PARSERS: |
        crowdsecurity/docker-logs
        crowdsecurity/traefik-logs
        crowdsecurity/syslog-logs

      # Postoverflows
      POSTOVERFLOWS: |
        crowdsecurity/rdns
        crowdsecurity/cdn-whitelist
        crowdsecurity/seo-bots-whitelist

      # Performance Tuning
      METRICS_PORT: 6060
      PROMETHEUS_ENABLED: true

      # Logging Configuration
      LOG_LEVEL: ${CROWDSEC_LOG_LEVEL:-info}
      LOG_MAX_SIZE: 100
      LOG_MAX_FILES: 3
      LOG_MAX_AGE: 7
      DEBUG: ${CROWDSEC_DEBUG:-false}
      TRACE: ${CROWDSEC_TRACE:-false}

      # Decision Configuration
      BAN_DURATION: ${CROWDSEC_BAN_DURATION:-4h}
      PARSER_ROUTINES: 4
      BUCKET_ROUTINES: 4
      OUTPUT_ROUTINES: 4

      # Notification Configuration
      NOTIFICATION_ENABLED: ${CROWDSEC_NOTIFICATIONS:-false}
      SLACK_WEBHOOK: ${CROWDSEC_SLACK_WEBHOOK:-}
      DISCORD_WEBHOOK: ${CROWDSEC_DISCORD_WEBHOOK:-}
      EMAIL_TO: ${CROWDSEC_EMAIL_TO:-}

      # GeoIP Database
      GEOIP_ENABLED: ${CROWDSEC_GEOIP:-true}
      MAXMIND_LICENSE_KEY: ${MAXMIND_LICENSE_KEY:-}

    # ====================================================================
    # LABELS
    # ====================================================================
    labels:
      # Traefik Integration (Dashboard)
      - "traefik.enable=true"
      - "traefik.http.routers.crowdsec-rtr.entrypoints=websecure"
      - "traefik.http.routers.crowdsec-rtr.rule=Host(`crowdsec.${PUBLIC_FQDN}`)"

      # TLS Configuration
      - "traefik.http.routers.crowdsec-rtr.tls=true"
      - "traefik.http.routers.crowdsec-rtr.tls.certresolver=http"
#       - "traefik.http.routers.crowdsec-rtr.tls.options=tls-opts@file"

      # Middleware
      - "traefik.http.routers.crowdsec-rtr.middlewares=chain-oauth@file"

      # Service
      - "traefik.http.routers.crowdsec-rtr.service=crowdsec-svc"
      - "traefik.http.services.crowdsec-svc.loadbalancer.server.port=8080"

      # Homepage Integration
      - "homepage.group=Security"
      - "homepage.name=CrowdSec"
      - "homepage.icon=crowdsec.svg"
      - "homepage.href=https://crowdsec.${PUBLIC_FQDN}"
      - "homepage.description=Collaborative IPS/IDS"
      - "homepage.weight=200"
      - "homepage.widget.type=crowdsec"
      - "homepage.widget.url=http://crowdsec:8080"
      - "homepage.widget.username=vps1"
      - "homepage.widget.password=test-crowdsec-api-password"

      # Monitoring
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=6060"
      - "prometheus.io/path=/metrics"

      # Service Discovery
      - "com.centurylinklabs.watchtower.enable=true"
      - "diun.enable=true"
      - "diun.watch_repo=true"
