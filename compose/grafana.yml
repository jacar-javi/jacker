services:
  # ====================================================================
  # Grafana - Enhanced Data Visualization and Dashboards
  # Official Image: https://hub.docker.com/r/grafana/grafana-enterprise
  # ====================================================================
  grafana:
    image: grafana/grafana-enterprise:12.2.0 # Enterprise includes all OSS features
    container_name: grafana

    # Entrypoint wrapper to inject Redis password from secret
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "REDIS_PASSWORD=$$(cat /run/secrets/redis_password) &&
      export GF_REMOTE_CACHE_CONNSTR=\"addr=redis:6379,pool_size=100,db=0,ssl=false,password=$$REDIS_PASSWORD\" &&
      exec /run.sh"

    # ====================================================================
    # SECURITY CONFIGURATION
    # ====================================================================
    security_opt:
      - no-new-privileges=true
      - apparmor=unconfined # Or custom profile
      - seccomp=unconfined

    # Run as specific user
    user: "${PUID:-472}:${PGID:-472}" # Grafana default UID/GID

    # Capability restrictions
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID

    # Restart policy
    restart: unless-stopped

    # ====================================================================
    # RESOURCE LIMITS
    # ====================================================================
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 1024M
          pids: 200
        reservations:
          cpus: "0.5"
          memory: 256M
    # ====================================================================
    # DEPENDENCIES
    # ====================================================================
    depends_on:
      traefik:
        condition: service_healthy
      prometheus:
        condition: service_started
      loki:
        condition: service_started

    # ====================================================================
    # NETWORK CONFIGURATION
    # ====================================================================
    networks:
      - monitoring
      - traefik_proxy
      - database
      - cache

    # Port exposure (only bind to localhost for security)
    ports:
      - "127.0.0.1:${GRAFANA_PORT:-3000}:3000"

    # ====================================================================
    # SECRETS
    # ====================================================================
    secrets:
      - grafana_admin_password
      - redis_password

    # ====================================================================
    # VOLUME MOUNTS
    # ====================================================================
    volumes:
      # Data storage
      - ${DATADIR}/grafana/data:/var/lib/grafana:rw

      # Provisioning (read-only)
      - ${CONFIGDIR}/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ${CONFIGDIR}/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ${CONFIGDIR}/grafana/provisioning/alerting:/etc/grafana/provisioning/alerting:ro
      - ${CONFIGDIR}/grafana/provisioning/plugins:/etc/grafana/provisioning/plugins:ro
      - ${CONFIGDIR}/grafana/provisioning/notifiers:/etc/grafana/provisioning/notifiers:ro
      - ${CONFIGDIR}/grafana/provisioning/access-control:/etc/grafana/provisioning/access-control:ro

      # Custom configuration
      - ${CONFIGDIR}/grafana/grafana.ini:/etc/grafana/grafana.ini:ro

      # TLS certificates
      - ${DATADIR}/grafana/certs:/etc/grafana/certs:ro

      # Plugins
      - ${DATADIR}/grafana/plugins:/var/lib/grafana/plugins:rw

      # Timezone
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

    # ====================================================================
    # ENVIRONMENT CONFIGURATION
    # ====================================================================
    environment:
      # Basic configuration
      TZ: ${TZ}

      # Paths
      GF_PATHS_DATA: /var/lib/grafana
      GF_PATHS_LOGS: /var/log/grafana
      GF_PATHS_PLUGINS: /var/lib/grafana/plugins
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning

      # Server configuration
      GF_SERVER_PROTOCOL: ${GF_SERVER_PROTOCOL:-http}
      GF_SERVER_DOMAIN: ${GF_SERVER_DOMAIN:-grafana.${PUBLIC_FQDN}}
      GF_SERVER_ROOT_URL: ${GF_SERVER_ROOT_URL:-https://grafana.${PUBLIC_FQDN}}
      GF_SERVER_SERVE_FROM_SUB_PATH: ${GF_SERVER_SERVE_FROM_SUB_PATH:-false}

      # Database configuration (default SQLite, can use PostgreSQL)
      GF_DATABASE_TYPE: ${GF_DATABASE_TYPE:-sqlite3}
      GF_DATABASE_HOST: ${GF_DATABASE_HOST:-postgres}
      GF_DATABASE_NAME: ${GF_DATABASE_NAME:-grafana_db}
      GF_DATABASE_USER: ${GF_DATABASE_USER:-grafana_user}
      GF_DATABASE_PASSWORD: ${GF_DATABASE_PASSWORD:-}
      GF_DATABASE_SSL_MODE: ${GF_DATABASE_SSL_MODE:-require}
      GF_DATABASE_MAX_IDLE_CONN: ${GF_DATABASE_MAX_IDLE_CONN:-2}
      GF_DATABASE_MAX_OPEN_CONN: ${GF_DATABASE_MAX_OPEN_CONN:-100}
      GF_DATABASE_CONN_MAX_LIFETIME: ${GF_DATABASE_CONN_MAX_LIFETIME:-14400}

      # Security configuration
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/grafana_admin_password
      GF_SECURITY_ADMIN_EMAIL: ${GRAFANA_ADMIN_EMAIL:-admin@localhost}
      GF_SECURITY_SECRET_KEY: ${GRAFANA_SECRET_KEY:-}
      GF_SECURITY_DISABLE_GRAVATAR: ${GRAFANA_DISABLE_GRAVATAR:-false}
      GF_SECURITY_ALLOW_EMBEDDING: ${GF_SECURITY_ALLOW_EMBEDDING:-false}
      GF_SECURITY_COOKIE_SECURE: ${GF_SECURITY_COOKIE_SECURE:-true}
      GF_SECURITY_COOKIE_SAMESITE: ${GF_SECURITY_COOKIE_SAMESITE:-lax}
      GF_SECURITY_STRICT_TRANSPORT_SECURITY: ${GF_SECURITY_STRICT_TRANSPORT_SECURITY:-true}
      GF_SECURITY_STRICT_TRANSPORT_SECURITY_MAX_AGE_SECONDS: 86400
      GF_SECURITY_STRICT_TRANSPORT_SECURITY_PRELOAD: true
      GF_SECURITY_STRICT_TRANSPORT_SECURITY_SUBDOMAINS: true
      GF_SECURITY_CONTENT_SECURITY_POLICY: ${GF_SECURITY_CONTENT_SECURITY_POLICY:-true}

      # Authentication configuration
      GF_AUTH_DISABLE_LOGIN_FORM: ${GF_AUTH_DISABLE_LOGIN_FORM:-false}
      GF_AUTH_DISABLE_SIGNOUT_MENU: ${GF_AUTH_DISABLE_SIGNOUT_MENU:-false}
      GF_AUTH_ANONYMOUS_ENABLED: ${GF_AUTH_ANONYMOUS_ENABLED:-true}
      GF_AUTH_ANONYMOUS_ORG_NAME: ${GF_AUTH_ANONYMOUS_ORG_NAME:-Main Org.}
      GF_AUTH_ANONYMOUS_ORG_ROLE: ${GF_AUTH_ANONYMOUS_ORG_ROLE:-Viewer}
      GF_AUTH_OAUTH_AUTO_LOGIN: ${GF_AUTH_OAUTH_AUTO_LOGIN:-true}
      GF_AUTH_ANONYMOUS_HIDE_VERSION: ${GF_AUTH_ANONYMOUS_HIDE_VERSION:-true}

      # OAuth/Proxy Auth Configuration
      GF_AUTH_PROXY_ENABLED: ${GF_AUTH_PROXY_ENABLED:-true}
      GF_AUTH_PROXY_HEADER_NAME: X-Forwarded-User
      GF_AUTH_PROXY_HEADER_PROPERTY: username
      GF_AUTH_PROXY_AUTO_SIGN_UP: true
      GF_AUTH_PROXY_HEADERS: "Email:X-Forwarded-Email"

      # Users configuration
      GF_USERS_ALLOW_SIGN_UP: ${GRAFANA_ALLOW_SIGN_UP:-false}
      GF_USERS_ALLOW_ORG_CREATE: ${GF_USERS_ALLOW_ORG_CREATE:-false}
      GF_USERS_AUTO_ASSIGN_ORG: ${GF_USERS_AUTO_ASSIGN_ORG:-true}
      GF_USERS_AUTO_ASSIGN_ORG_ID: ${GF_USERS_AUTO_ASSIGN_ORG_ID:-1}
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: ${GF_USERS_AUTO_ASSIGN_ORG_ROLE:-Editor}
      GF_USERS_DEFAULT_THEME: ${GF_USERS_DEFAULT_THEME:-dark}

      # Plugin installation
      GF_INSTALL_PLUGINS: ${GRAFANA_INSTALL_PLUGINS:-grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel,redis-datasource,redis-app,redis-explorer-app}

      # Logging configuration
      GF_LOG_MODE: ${GF_LOG_MODE:-console file}
      GF_LOG_LEVEL: ${GF_LOG_LEVEL:-info}
      GF_LOG_CONSOLE_FORMAT: ${GF_LOG_CONSOLE_FORMAT:-json}

      # Alerting configuration
      GF_ALERTING_ENABLED: ${GF_ALERTING_ENABLED:-false}
      GF_UNIFIED_ALERTING_ENABLED: ${GF_UNIFIED_ALERTING_ENABLED:-true}

      # Metrics and analytics
      GF_ANALYTICS_REPORTING_ENABLED: ${GF_ANALYTICS_REPORTING_ENABLED:-false}
      GF_ANALYTICS_CHECK_FOR_UPDATES: ${GF_ANALYTICS_CHECK_FOR_UPDATES:-false}

      # Performance settings
      GF_SNAPSHOTS_EXTERNAL_ENABLED: ${GF_SNAPSHOTS_EXTERNAL_ENABLED:-false}
      GF_DASHBOARDS_MIN_REFRESH_INTERVAL: ${GF_DASHBOARDS_MIN_REFRESH_INTERVAL:-5s}

      # Feature toggles
      GF_FEATURE_TOGGLES_ENABLE: ${GF_FEATURE_TOGGLES:-}

      # Remote cache (Redis) - for query caching
      # Note: Grafana doesn't support password file for Redis, use entrypoint wrapper
      GF_REMOTE_CACHE_TYPE: ${GF_REMOTE_CACHE_TYPE:-redis}
      GF_REMOTE_CACHE_CONNSTR: "addr=redis:6379,pool_size=100,db=0,ssl=false,password="

      # Live HA Engine (Redis) - for real-time updates and session storage
      GF_LIVE_HA_ENGINE: ${GF_LIVE_HA_ENGINE:-redis}
      GF_LIVE_HA_ENGINE_ADDRESS: ${GF_LIVE_HA_ENGINE_ADDRESS:-redis:6379}
      GF_LIVE_MAX_CONNECTIONS: ${GF_LIVE_MAX_CONNECTIONS:-100}

      # Database sessions (Redis) - for user session storage
      GF_DATABASE_CACHE_TYPE: ${GF_DATABASE_CACHE_TYPE:-redis}
      GF_DATABASE_CACHE_ADDR: ${GF_DATABASE_CACHE_ADDR:-redis:6379}
      GF_DATABASE_CACHE_DB: ${GF_DATABASE_CACHE_DB:-1}

    # ====================================================================
    # HEALTH CHECK
    # ====================================================================
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # ====================================================================
    # LABELS
    # ====================================================================
    labels:
      # Traefik routing
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-rtr.entrypoints=websecure"
      - "traefik.http.routers.grafana-rtr.rule=Host(`grafana.${PUBLIC_FQDN}`)"

      # TLS Configuration
      - "traefik.http.routers.grafana-rtr.tls=true"
      - "traefik.http.routers.grafana-rtr.tls.certresolver=http"
      - "traefik.http.routers.grafana-rtr.tls.options=tls-opts@file"

      # Middleware
      - "traefik.http.routers.grafana-rtr.middlewares=chain-oauth@file"

      # Service
      - "traefik.http.routers.grafana-rtr.service=grafana-svc"
      - "traefik.http.services.grafana-svc.loadbalancer.server.port=3000"

      # Health check
      - "traefik.http.services.grafana-svc.loadbalancer.healthcheck.path=/api/health"
      - "traefik.http.services.grafana-svc.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.grafana-svc.loadbalancer.healthcheck.timeout=5s"

      # Homepage Integration
      - "homepage.group=Monitoring"
      - "homepage.name=Grafana"
      - "homepage.icon=grafana.svg"
      - "homepage.href=https://grafana.${PUBLIC_FQDN}"
      - "homepage.description=Data Visualization & Analytics"
      - "homepage.weight=200"
      # Widget disabled - requires admin permissions not available to anonymous users
      # - "homepage.widget.type=grafana"
      # - "homepage.widget.url=http://grafana:3000"

      # Service Discovery
      - "com.centurylinklabs.watchtower.enable=false" # Don't auto-update monitoring
      - "diun.enable=true"
      - "diun.watch_repo=true"

      # Monitoring
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=3000"
      - "prometheus.io/path=/metrics"
