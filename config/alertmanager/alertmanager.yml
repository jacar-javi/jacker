# Alertmanager Enhanced Configuration
# https://prometheus.io/docs/alerting/latest/configuration/

global:
  # SMTP Configuration
  smtp_from: '${SMTP_FROM:-alerts@example.com}'
  smtp_smarthost: '${SMTP_HOST:-smtp.gmail.com}:${SMTP_PORT:-587}'
  smtp_auth_username: '${SMTP_USERNAME}'
  smtp_auth_password: '${SMTP_PASSWORD}'
  smtp_require_tls: ${SMTP_REQUIRE_TLS:-true}

  # Slack Configuration
  slack_api_url: '${SLACK_WEBHOOK_URL}'

  # HTTP Configuration
  http_config:
    tls_config:
      insecure_skip_verify: ${ALERTMANAGER_INSECURE_TLS:-false}

  # Timing
  resolve_timeout: 5m

# Templates for alerts
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# The root route
route:
  # Group alerts by these labels
  group_by: ['alertname', 'cluster', 'service', 'severity']

  # Initial wait before sending grouped alerts
  group_wait: 30s

  # Wait before sending new alerts for a group
  group_interval: 5m

  # Wait before resending alerts
  repeat_interval: 12h

  # Default receiver
  receiver: 'default'

  # Child routes
  routes:
    # Critical alerts - immediate notification via multiple channels
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 10s
      repeat_interval: 1h
      continue: true

    # Security alerts - dedicated channel
    - match:
        service: security
      receiver: 'security-alerts'
      group_wait: 10s
      repeat_interval: 30m

    # CrowdSec alerts
    - match:
        service: crowdsec
      receiver: 'security-alerts'
      group_wait: 10s

    # Database alerts
    - match_re:
        service: (postgresql|postgres|redis)
      receiver: 'database-alerts'
      group_wait: 1m
      repeat_interval: 4h

    # OAuth/Authentication alerts
    - match:
        service: oauth
      receiver: 'auth-alerts'
      group_wait: 30s
      repeat_interval: 2h

    # Infrastructure warnings
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 5m
      repeat_interval: 6h

    # Info/Low priority alerts
    - match:
        severity: info
      receiver: 'info-alerts'
      group_wait: 15m
      repeat_interval: 24h

    # Development/Test environments (if labeled)
    - match:
        environment: development
      receiver: 'dev-alerts'
      group_wait: 30m
      repeat_interval: 24h

    # Null receiver for specific alerts to ignore
    - match:
        alertname: Watchdog
      receiver: 'null'

# Inhibition rules - prevent alert storms
inhibit_rules:
  # Critical alerts inhibit warnings for same service
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']

  # Node down inhibits all other node alerts
  - source_match:
      alertname: 'NodeDown'
    target_match_re:
      alertname: 'Node.*'
    equal: ['instance']

  # Database down inhibits performance alerts
  - source_match:
      alertname: 'PostgreSQLDown'
    target_match_re:
      alertname: 'PostgreSQL.*'
    equal: ['instance']

  - source_match:
      alertname: 'RedisDown'
    target_match_re:
      alertname: 'Redis.*'
    equal: ['instance']

# Receivers configuration
receivers:
  # Default receiver - email only
  - name: 'default'
    email_configs:
      - to: '${ALERT_EMAIL_TO:-admin@example.com}'
        send_resolved: true
        headers:
          Subject: '[{{ .Status | toUpper }}] Jacker Alert: {{ .GroupLabels.alertname }}'
        html: |
          {{ range .Alerts }}
          <h3>{{ .Labels.alertname }}</h3>
          <p><strong>Description:</strong> {{ .Annotations.description }}</p>
          <p><strong>Summary:</strong> {{ .Annotations.summary }}</p>
          <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
          <p><strong>Service:</strong> {{ .Labels.service }}</p>
          {{ end }}

  # Critical alerts - multiple channels
  - name: 'critical-alerts'
    email_configs:
      - to: '${ALERT_EMAIL_CRITICAL:-admin@example.com}'
        send_resolved: true
        headers:
          Subject: 'üö® CRITICAL: {{ .GroupLabels.alertname }}'
    slack_configs:
      - channel: '${SLACK_CHANNEL_CRITICAL:-#critical-alerts}'
        title: 'üö® Critical Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        send_resolved: true
        color: 'danger'
    pagerduty_configs:
      - service_key: '${PAGERDUTY_SERVICE_KEY}'
        send_resolved: true
    webhook_configs:
      - url: '${WEBHOOK_URL_CRITICAL}'
        send_resolved: true

  # Security alerts
  - name: 'security-alerts'
    email_configs:
      - to: '${ALERT_EMAIL_SECURITY:-security@example.com}'
        send_resolved: true
        headers:
          Subject: 'üîí SECURITY: {{ .GroupLabels.alertname }}'
    slack_configs:
      - channel: '${SLACK_CHANNEL_SECURITY:-#security}'
        title: 'üîí Security Alert'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Labels.alertname }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}
        send_resolved: true
        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'

  # Database alerts
  - name: 'database-alerts'
    email_configs:
      - to: '${ALERT_EMAIL_DATABASE:-dba@example.com}'
        send_resolved: true
    slack_configs:
      - channel: '${SLACK_CHANNEL_DATABASE:-#database}'
        title: 'üóÑÔ∏è Database Alert'
        text: '{{ .GroupLabels.alertname }}: {{ .CommonAnnotations.summary }}'
        send_resolved: true

  # Authentication alerts
  - name: 'auth-alerts'
    email_configs:
      - to: '${ALERT_EMAIL_AUTH:-security@example.com}'
        send_resolved: true
    slack_configs:
      - channel: '${SLACK_CHANNEL_AUTH:-#auth-alerts}'
        title: 'üîê Authentication Alert'
        text: '{{ .CommonAnnotations.summary }}'
        send_resolved: true

  # Warning alerts
  - name: 'warning-alerts'
    email_configs:
      - to: '${ALERT_EMAIL_WARNING:-ops@example.com}'
        send_resolved: true
        headers:
          Subject: '‚ö†Ô∏è  WARNING: {{ .GroupLabels.alertname }}'
    slack_configs:
      - channel: '${SLACK_CHANNEL_WARNING:-#warnings}'
        title: '‚ö†Ô∏è  Warning'
        text: '{{ .CommonAnnotations.summary }}'
        send_resolved: false
        color: 'warning'

  # Info alerts
  - name: 'info-alerts'
    slack_configs:
      - channel: '${SLACK_CHANNEL_INFO:-#monitoring}'
        title: '‚ÑπÔ∏è Info'
        text: '{{ .CommonAnnotations.summary }}'
        send_resolved: false
        color: '#36a64f'

  # Development alerts
  - name: 'dev-alerts'
    slack_configs:
      - channel: '${SLACK_CHANNEL_DEV:-#dev-monitoring}'
        title: 'Dev Alert'
        text: '{{ .CommonAnnotations.summary }}'
        send_resolved: false

  # Null receiver - silences alerts
  - name: 'null'