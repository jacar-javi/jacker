# ============================================
# Jacker Environment Configuration Defaults
# ============================================
# Copy this file to .env and configure your values
# All values with defaults are optional
# Values without defaults are REQUIRED

# ============================================
# System User & Paths
# ============================================
# User/Group IDs for container permissions
PUID=1000
PGID=1000
# Timezone (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
TZ=Europe/Madrid
# Base directories
USERDIR=${HOME}
DOCKERDIR=
DATADIR=${DOCKERDIR}/data
CONFIGDIR=${DOCKERDIR}/config
SECRETSDIR=${DOCKERDIR}/secrets

# ============================================
# Network Configuration
# ============================================
# System hostname
HOSTNAME=
# Base domain (e.g., example.com)
DOMAINNAME=
# Full public FQDN (e.g., server.example.com)
PUBLIC_FQDN=

# Docker network configuration
DOCKER_DEFAULT_SUBNET=192.168.69.0/24
SOCKET_PROXY_SUBNET=192.168.70.0/24
SOCKET_PROXY_IP=192.168.70.254
TRAEFIK_PROXY_SUBNET=192.168.71.0/24
TRAEFIK_PROXY_IP=192.168.71.254
CODE_TRAEFIK_SUBNET_IP=192.168.71.253
DATABASE_SUBNET=192.168.72.0/24
MONITORING_SUBNET=192.168.73.0/24
CACHE_SUBNET=192.168.74.0/24
BACKUP_SUBNET=192.168.75.0/24

# Trusted IPs (no external access)
LOCAL_IPS=127.0.0.1/32,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12

# Cloudflare IPs (ONLY enable if using Cloudflare proxy - currently NOT in use)
# CLOUDFLARE_IPS=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22

# ============================================
# SSL/TLS Configuration
# ============================================
# Let's Encrypt email for SSL certificates
LETSENCRYPT_EMAIL=

# Let's Encrypt staging (set to true for testing)
LETSENCRYPT_STAGING=false

# ============================================
# OAuth2 Authentication (Google/GitHub/OIDC)
# ============================================
# Provider: google, github, oidc, azure, gitlab
OAUTH_PROVIDER=google
OAUTH_PROVIDER_NAME=Google

# OAuth credentials
OAUTH_CLIENT_ID=1059260209846-tl3k4aedjb4jeotvr1ovvrvo5thqbvv4.apps.googleusercontent.com
# Auto-generated by init-secrets.sh if not set
OAUTH_CLIENT_SECRET=

# OAuth security (auto-generated by init-secrets.sh if not set)
OAUTH_SECRET=
OAUTH_COOKIE_SECRET=
OAUTH2_PROXY_COOKIE_SECRET=
OAUTH_SIGNATURE_KEY=

# Session configuration
OAUTH_COOKIE_LIFETIME=604800    # 1 week
OAUTH_COOKIE_REFRESH=3600       # 1 hour
OAUTH_SESSION_STORE=redis       # redis or cookie

# Access control
OAUTH_WHITELIST=                # Comma-separated emails
OAUTH_EMAIL_DOMAINS=*           # * for any, or specific domains

# UI Configuration
OAUTH_SKIP_PROVIDER_BUTTON=false
OAUTH_BANNER=Jacker Infrastructure - Secure Login
OAUTH_FOOTER=Protected by OAuth2-Proxy

# Provider-specific settings (optional)
OAUTH_GOOGLE_ADMIN_EMAIL=
OAUTH_GITHUB_ORG=
OAUTH_GITHUB_TEAM=
OAUTH_OIDC_ISSUER_URL=
OAUTH_OIDC_JWKS_URL=

# ============================================
# Authentik (Self-Hosted Identity Provider)
# ============================================
# Only configure if using Authentik instead of OAuth
AUTHENTIK_VERSION=2024.10.4
# Auto-generated by init-secrets.sh if not set
AUTHENTIK_SECRET_KEY=
# Auto-generated by init-secrets.sh if not set
AUTHENTIK_POSTGRES_PASSWORD=
AUTHENTIK_POSTGRES_DB=authentik
AUTHENTIK_POSTGRES_USER=authentik
# Auto-generated by init-secrets.sh if not set
AUTHENTIK_API_TOKEN=
AUTHENTIK_LOG_LEVEL=info

# ============================================
# PostgreSQL Database
# ============================================
POSTGRES_DB=crowdsec_db
POSTGRES_USER=crowdsec
# Auto-generated by init-secrets.sh if not set
POSTGRES_PASSWORD=

# Multiple databases (comma-separated)
POSTGRES_MULTIPLE_DATABASES=crowdsec_db,grafana_db,authentik_db

# Limited privilege users (auto-generated by init-secrets.sh if not set)
GF_DATABASE_PASSWORD=
CROWDSEC_DB_PASSWORD=
POSTGRES_EXPORTER_PASSWORD=

# CrowdSec database user (limited permissions)
POSTGRES_CROWDSEC_USER=crowdsec_user

# Replication (optional)
POSTGRES_REPLICATION_MODE=master
POSTGRES_REPLICATION_USER=replicator
# Auto-generated by init-secrets.sh if not set
POSTGRES_REPLICATION_PASSWORD=

# ============================================
# Redis Cache
# ============================================
# Auto-generated by init-secrets.sh if not set
REDIS_PASSWORD=
REDIS_MAXMEMORY=256mb
REDIS_MAXMEMORY_POLICY=allkeys-lru
# Protected mode blocks network connections from other containers
# Must be disabled for OAuth and other services to connect via cache network
REDIS_PROTECTED_MODE=no

# Redis User Passwords (auto-generated by init-secrets.sh if not set)
REDIS_OAUTH_PASSWORD=
# URL-encoded version of REDIS_OAUTH_PASSWORD for connection strings (auto-generated)
REDIS_OAUTH_PASSWORD_URLENCODED=
REDIS_RATELIMIT_PASSWORD=
REDIS_EXPORTER_PASSWORD=

# ============================================
# CrowdSec Security
# ============================================
CROWDSEC_API_PORT=8888
# Auto-generated by init-secrets.sh if not set
CROWDSEC_TRAEFIK_BOUNCER_API_KEY=
# Auto-generated by init-secrets.sh if not set
CROWDSEC_IPTABLES_BOUNCER_API_KEY=
# Auto-generated by init-secrets.sh if not set
CROWDSEC_API_LOCAL_PASSWORD=
# Auto-generated by init-secrets.sh if not set
CROWDSEC_AGENT_PASSWORD=
# Auto-generated by init-secrets.sh if not set
CROWDSEC_ENROLL_KEY=
CROWDSEC_ENROLL_INSTANCE_NAME=${HOSTNAME}
CROWDSEC_ENROLL_TAGS=linux,docker,traefik

# ============================================
# Grafana Monitoring
# ============================================
# Grafana admin credentials
GF_SECURITY_ADMIN_USER=admin
# Auto-generated by init-secrets.sh if not set
GF_SECURITY_ADMIN_PASSWORD=

# Grafana server configuration
GF_SERVER_DOMAIN=grafana.${PUBLIC_FQDN}
GF_SERVER_ROOT_URL=https://grafana.${PUBLIC_FQDN}

# Database backend (optional - uses SQLite by default)
GF_DATABASE_TYPE=
GF_DATABASE_HOST=
GF_DATABASE_NAME=
GF_DATABASE_USER=
GF_DATABASE_PASSWORD=
GF_DATABASE_SSL_MODE=

# ============================================
# Alerting Configuration
# ============================================
# SMTP settings for email alerts
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_FROM=alerts@${DOMAINNAME}
# Configure with your SMTP username
SMTP_USERNAME=
# Auto-generated by init-secrets.sh if not set, or use your SMTP password
SMTP_PASSWORD=
SMTP_REQUIRE_TLS=true

# Alert recipients
ALERT_EMAIL_TO=admin@${DOMAINNAME}
ALERT_EMAIL_CRITICAL=admin@${DOMAINNAME}
ALERT_EMAIL_SECURITY=security@${DOMAINNAME}
ALERT_EMAIL_DATABASE=dba@${DOMAINNAME}
ALERT_EMAIL_AUTH=security@${DOMAINNAME}
ALERT_EMAIL_WARNING=ops@${DOMAINNAME}

# Slack notifications (optional)
SLACK_WEBHOOK_URL=
SLACK_CHANNEL_CRITICAL=#critical-alerts
SLACK_CHANNEL_SECURITY=#security
SLACK_CHANNEL_DATABASE=#database
SLACK_CHANNEL_AUTH=#auth-alerts
SLACK_CHANNEL_WARNING=#warnings
SLACK_CHANNEL_INFO=#monitoring
SLACK_CHANNEL_DEV=#dev-monitoring

# PagerDuty (optional)
PAGERDUTY_SERVICE_KEY=
PAGERDUTY_ROUTING_KEY=

# Telegram (optional)
TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=

# Generic webhook (optional)
WEBHOOK_URL_CRITICAL=
WEBHOOK_URL_WARNING=

# ============================================
# Service Specific Settings
# ============================================

# Homepage Dashboard
HOMEPAGE_VAR_TITLE="Jacker Dashboard"
HOMEPAGE_VAR_SEARCH_PROVIDER=google
HOMEPAGE_VAR_HEADER_STYLE=clean

# Portainer
# Auto-generated by init-secrets.sh if not set
PORTAINER_ADMIN_PASSWORD=

# VS Code Server
# Auto-generated by init-secrets.sh if not set
CODE_PASSWORD=
# Auto-generated by init-secrets.sh if not set
CODE_SUDO_PASSWORD=
CODE_PROXY_DOMAIN=code.${PUBLIC_FQDN}

# Jaeger Tracing
JAEGER_AGENT_PORT=6831
JAEGER_UI_PORT=16686

# ============================================
# Firewall Configuration (UFW)
# ============================================
UFW_ALLOW_FROM=
UFW_ALLOW_PORTS=http,https
UFW_ALLOW_SSH=192.168.71.253

# ============================================
# Feature Flags
# ============================================
# Enable/disable optional features
ENABLE_AUTHENTIK=false
ENABLE_JAEGER=false
ENABLE_REDIS_COMMANDER=false
ENABLE_POSTGRES_EXPORTER=true
ENABLE_PUSHGATEWAY=false
ENABLE_ALERTMANAGER_CLUSTER=false

# ============================================
# Advanced Settings
# ============================================
# VM detection (auto-detected)
HOST_IS_VM=false

# Log retention
LOG_MAX_SIZE=50m
LOG_MAX_FILE=5
LOG_RETENTION_DAYS=7

# Prometheus retention
PROMETHEUS_RETENTION=15d
PROMETHEUS_STORAGE_SIZE=10GB

# Loki retention
LOKI_RETENTION=168h
LOKI_MAX_QUERY_LENGTH=721h

# Docker API version
DOCKER_API_VERSION=1.41

# Compose project name
COMPOSE_PROJECT_NAME=jacker

# ============================================
# Resource Tuning Configuration
# ============================================
# Enable automatic resource tuning based on system capabilities
ENABLE_RESOURCE_TUNING=true

# Resource profile: auto|minimal|balanced|performance|custom
RESOURCE_PROFILE=auto

# CPU reserve percentage for host system (0-50)
RESOURCE_CPU_RESERVE_PERCENT=20

# Memory reserve in GB for host system
RESOURCE_MEMORY_RESERVE_GB=2

# Override file path
RESOURCE_OVERRIDE_FILE=docker-compose.override.yml

# ============================================
# Database Backup Configuration
# ============================================
# Enable/disable automated database backups
BACKUP_ENABLED=true
# Retention period for backups (days)
BACKUP_RETENTION_DAYS=7

# ============================================
# Development Settings
# ============================================
# Only for development/testing
DEV_MODE=false
DEBUG=false
VERBOSE_LOGS=false
DISABLE_AUTH=false
INSECURE_TLS=false
